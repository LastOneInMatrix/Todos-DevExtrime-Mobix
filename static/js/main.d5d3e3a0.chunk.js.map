{"version":3,"sources":["App.module.css","Store/Users.ts","Store/Todo.ts","Popup/Popup.tsx","Test/TestList.tsx","Todos/Todos.tsx","Users/Users.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","users","activeUser","makeAutoObservable","this","fetch","then","response","json","todos","userId","parseInt","v1","split","join","id","title","completed","activeTodoId","deep","push","userStore","filter","t","map","RenderContent","props","onFieldDataChanged","e","console","log","component","option","todoStore","changeTitleForTask","Title","dataField","text","useSubmitBehavior","PopupForChanging","observer","className","visible","isPopupVisible","closeOnOutsideClick","onHiding","togglePopup","width","height","resizeEnabled","contentRender","ListItemTmpl","style","display","justifyContent","value","data","onValueChange","margin","icon","onClick","getActiveTodoId","type","deleteTodo","toJS","renderLabel","name","TestListComponent","history","useHistory","backButtonOptions","notify","useState","setPopupVisibility","Fragment","location","widget","options","refreshButtonOptions","locateInMenu","addButtonOptions","render","searchMode","searchExpr","searchEnabled","itemComponent","dataSource","selectionMode","pageLoadMode","scrollByContent","showScrollbar","padding","borderRadius","allowReordering","Todos","params","useParams","useEffect","fetchTodo","userTodos","useMemo","ListItem","Users","activeId","setActiveId","getUsers","userMemo","u","to","onItemClick","itemData","setActiveUser","action","message","shading","App","main","sidebar","buttonsBlock","exact","path","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5d3e3a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__2tEjO\",\"sidebar\":\"App_sidebar__2u_wQ\",\"buttonsBlock\":\"App_buttonsBlock__6zcgR\"};","import {makeAutoObservable} from \"mobx\";\r\n\r\ntype UserType = {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nclass User {\r\n    users: UserType[] = [];\r\n    activeUser: UserType  | null = null\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n    setActiveUser(activeUser: UserType) {\r\n        this.activeUser = activeUser\r\n    }\r\n    getUsers() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(json => this.users = json)\r\n    }\r\n}\r\nexport default new User()","import {makeAutoObservable} from \"mobx\";\r\nimport {v1} from \"uuid\";\r\nimport userStore from '../Store/Users'\r\n\r\nexport type TodoType = {\r\n    userId: number | undefined;\r\n    id: number;\r\n    title: string;\r\n    completed: boolean;\r\n}\r\n\r\nclass Todo {\r\n    todos: TodoType[] = [\r\n        {\r\n            userId: parseInt(v1().split('-').join(''), 16),\r\n            id: 129019203,\r\n            title: 'new',\r\n            completed: false,\r\n        }\r\n    ]\r\n    activeTodoId: number = 0\r\n    constructor() {\r\n        makeAutoObservable(this, {}, {deep: true});\r\n    }\r\n    addTodo(title: string) {\r\n        this.todos.push({\r\n            userId: userStore.activeUser?.id,\r\n            id: parseInt(v1().split('-').join(''), 16),\r\n            title: title,\r\n            completed: false\r\n        })\r\n    }\r\n    deleteTodo(id: string | number) {\r\n        this.todos = this.todos.filter(t => t.id !== id)\r\n    }\r\n    completeTodo(id: string | number) {\r\n        this.todos = this.todos.map(t => t.id === id ? {...t, completed: !t.completed} : t)\r\n    }\r\n\r\n    getActiveTodoId(id: number) {\r\n        this.activeTodoId = id\r\n    }\r\n    changeTitleForTask(title: string) {\r\n        this.todos = this.todos.map(t => t.id === this.activeTodoId ? {...t, title} : t)\r\n    }\r\n    fetchTodo(){\r\n        fetch('https://jsonplaceholder.typicode.com/todos/')\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                this.todos = [...this.todos, ...json]\r\n            })\r\n    }\r\n}\r\n\r\nexport default new Todo()","import React, {useCallback} from 'react';\r\nimport {Popup} from 'devextreme-react/popup';\r\nimport Form, { Item,  ButtonItem,\r\n    ButtonOptions, SimpleItem } from 'devextreme-react/form';\r\nimport TextBox from 'devextreme-react/text-box';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport todoStore from \"../Store/Todo\";\r\n\r\n\r\n\r\nconst RenderContent = (props: any) =>  {\r\n\r\n    const getData = (e: any) => {\r\n        console.log(e.component.option(\"formData\"))\r\n        todoStore.changeTitleForTask(e.component.option(\"formData\").Title)\r\n    }\r\n\r\n    return (\r\n\r\n                <Form  onFieldDataChanged={getData}>\r\n                    <Item dataField=\"Title\" >\r\n\r\n                    </Item>\r\n\r\n                    {/* eslint-disable-next-line react/jsx-no-undef */}\r\n                        <ButtonItem>\r\n                        <ButtonOptions\r\n                            text=\"Submit the Form\"\r\n                            useSubmitBehavior={true}\r\n                        />\r\n                    </ButtonItem>\r\n\r\n                </Form>\r\n    )\r\n}\r\nexport const PopupForChanging = observer((props: any) =>  {\r\n    return (\r\n        <div className=\"App\">\r\n            <Popup\r\n                visible={props.isPopupVisible}\r\n                closeOnOutsideClick={true}\r\n                onHiding={props.togglePopup}\r\n                width={500}\r\n                height={500}\r\n                resizeEnabled={true}\r\n                contentRender={() => <RenderContent id={todoStore.activeTodoId}/>}\r\n            />\r\n        </div>\r\n    );\r\n})\r\n\r\n","import List, {ItemDragging} from 'devextreme-react/list';\r\n\r\nimport Button from 'devextreme-react/button';\r\nimport React, {useState} from 'react';\r\nimport {toJS} from 'mobx';\r\nimport todoStore, {TodoType} from \"../Store/Todo\";\r\nimport {CheckBox} from 'devextreme-react/check-box';\r\nimport {PopupForChanging} from \"../Popup/Popup\";\r\nimport Toolbar, {Item} from 'devextreme-react/toolbar';\r\nimport notify from \"devextreme/ui/notify\";\r\nimport {useHistory} from \"react-router\";\r\nimport userStore from \"../Store/Users\"\r\n\r\ntype MyStateType = {};\r\nexport type ConnectedPropsType = any\r\n\r\nconst ListItemTmpl: React.FC<ConnectedPropsType> = (props) => {\r\n    const style = {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    }\r\n    return (\r\n        <div style={style}>\r\n\r\n            <div>\r\n                <CheckBox value={props.data.data.completed} onValueChange={() => {\r\n                    props.data.data.completed = !props.data.data.completed\r\n                }}/>\r\n                {props.data.data.title}\r\n            </div>\r\n\r\n            {/* eslint-disable-next-line react/jsx-no-undef */}\r\n            <div>\r\n                <Button width={45} style={{margin: '10px'}} icon='rename' onClick={() => {\r\n                    props.togglePopup(props.data.data.id)\r\n                    todoStore.getActiveTodoId(props.data.data.id)\r\n                }}/>\r\n                <Button\r\n                    width={100}\r\n                    icon=\"trash\"\r\n                    type=\"danger\"\r\n                    onClick={() => todoStore.deleteTodo(toJS(props.data.data.id))}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\ntype ListPropsType = { todos: TodoType[] };\r\n\r\nfunction renderLabel() {\r\n\r\n    return <div className=\"toolbar-label\"><b>Todo&apos;s for</b> {userStore.activeUser?.name}</div>;\r\n}\r\n\r\nexport const TestListComponent = (props: ListPropsType) => {\r\n    const history = useHistory()\r\n    const backButtonOptions = {\r\n        type: 'back',\r\n\r\n        onClick: () => {\r\n            history.push('/')\r\n            todoStore.todos = [] //TODO узнать насчет прямого изменения без экшена\r\n            notify('Здесь будет возврат на юзеров');\r\n        }\r\n    };\r\n    const [isPopupVisible, setPopupVisibility] = useState(false);\r\n\r\n    const togglePopup = (id: number) => {\r\n        setPopupVisibility(!isPopupVisible);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Toolbar>\r\n                <Item location=\"before\"\r\n                      widget=\"dxButton\"\r\n                      options={backButtonOptions}/>\r\n                <Item location=\"before\"\r\n                      widget=\"dxButton\"\r\n                      options={refreshButtonOptions}/>\r\n                <Item location=\"after\"\r\n                      locateInMenu=\"auto\"\r\n                      widget=\"dxButton\"\r\n                      options={addButtonOptions}/>\r\n                <Item location=\"center\"\r\n                      locateInMenu=\"never\"\r\n                      render={renderLabel}/>\r\n            </Toolbar>\r\n            <List\r\n                height={'100vh'}\r\n                searchMode={'contains'}\r\n                searchExpr={['title']}\r\n                searchEnabled={true}\r\n                itemComponent={(data) => <ListItemTmpl data={data} togglePopup={togglePopup}/>}\r\n                dataSource={props.todos}\r\n                selectionMode=\"multiple\"\r\n                pageLoadMode=\"nextButton\"\r\n                scrollByContent={true}\r\n                showScrollbar=\"never\"\r\n                style={{padding: '22px', margin: '10px', borderRadius:' 30px'}}\r\n            >\r\n                <ItemDragging\r\n                    allowReordering={true}\r\n                />\r\n            </List>\r\n            <PopupForChanging isPopupVisible={isPopupVisible} togglePopup={togglePopup}/>\r\n\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\n\r\n\r\nconst refreshButtonOptions = {\r\n    icon: 'refresh',\r\n    onClick: () => {\r\n        notify('Здесь будет обновление!');\r\n    }\r\n};\r\n\r\nconst addButtonOptions = {\r\n    icon: 'plus',\r\n    onClick: () => {\r\n        notify('Здесь будет всплывать модалка добавления!');\r\n    }\r\n};\r\n\r\nconst saveButtonOptions = {\r\n    text: 'Save',\r\n    onClick: () => {\r\n        notify('Save option has been clicked!');\r\n    }\r\n};\r\n\r\n","import todoStore from '../Store/Todo';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {useEffect, useMemo} from \"react\";\r\nimport {TestListComponent} from \"../Test/TestList\";\r\nimport {useParams} from \"react-router\";\r\nimport {toJS} from \"mobx\";\r\n\r\nexport const Todos = observer(() => {\r\n        const params = useParams<{ userId: string }>()\r\n\r\n        useEffect(() => {\r\n            todoStore.fetchTodo()\r\n        }, [])\r\n\r\n        const userTodos = useMemo(() => {\r\n            return todoStore.todos.filter((t) => t.userId === +params.userId)\r\n        }, [todoStore.todos])\r\n        console.log(toJS(userTodos.map(t => toJS(t))))\r\n        return <>\r\n            <TestListComponent todos={userTodos}/>\r\n        </>\r\n    }\r\n)","import React, {useEffect, useMemo, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport userStore from \"../Store/Users\"\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport List, {MenuItem} from 'devextreme-react/list';\r\nimport notify from 'devextreme/ui/notify';\r\nimport {ItemClickEvent} from \"devextreme/ui/list\";\r\nimport {Redirect} from \"react-router\";\r\n\r\ntype ListItemPropsType = {\r\n    data: { id: number, name: string }\r\n}\r\ntype UsersPropsType = {}\r\n\r\nconst style = {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n}\r\nconst ListItem = (props: ListItemPropsType) => {\r\n\r\n    return (\r\n        <pre style={style}>\r\n                    <b>{props.data.name}</b>\r\n                    <b>Users id: {props.data.id}</b>\r\n            </pre>\r\n\r\n    );\r\n};\r\n\r\nexport const Users: React.FC<UsersPropsType> = observer((props) => {\r\n    const [activeId, setActiveId] = useState<string>('');\r\n\r\n    useEffect(() => {\r\n        userStore.getUsers()\r\n    }, [])\r\n    console.log(activeId)\r\n    const userMemo = useMemo(() => {\r\n        return userStore.users.map((u) => {\r\n            return {id: u.id, name: u.name}\r\n        })\r\n    }, [userStore.users])\r\n    const selectItem = ({itemData, ...rest}: ItemClickEvent) => {\r\n        userStore.setActiveUser(itemData)\r\n        setActiveId(itemData.id)\r\n    };\r\n    const showItem = ({itemData}: any) => {\r\n        notify({\r\n            message: `Name: ${itemData.name} ID: ${itemData.id}`,\r\n            width: 250,\r\n            height: 250,\r\n            shading: true\r\n        }, \"info\", 2000);\r\n    }\r\n    if (activeId !== '') {\r\n       return <Redirect to={`/todos/${activeId}`} />\r\n    }\r\n    console.log(userStore.activeUser)\r\n    return <div>\r\n        <b> Выберите юзера </b>\r\n        <List\r\n            height={'100vh'}\r\n            dataSource={userMemo}\r\n            itemComponent={ListItem}\r\n            onItemClick={selectItem}\r\n        >\r\n            {/* eslint-disable-next-line react/jsx-no-undef */}\r\n            <MenuItem\r\n                text=\"Show Details\"\r\n                action={showItem}\r\n            />\r\n\r\n        </List>\r\n\r\n        There will be User\r\n    </div>\r\n})","import React from 'react';\nimport 'devextreme/dist/css/dx.light.css';\nimport style from './App.module.css'\nimport {Todos} from \"./Todos/Todos\";\nimport {Users} from \"./Users/Users\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\n\n\n\n\nclass App extends React.Component {\n\n    render() {\n        return (\n            <HashRouter>\n                <div className={style.main}>\n                    <div className={style.sidebar}>1</div>\n\n                    {/* eslint-disable-next-line react/jsx-no-undef */}\n                    <div className={style.buttonsBlock}>\n                        <Switch>\n                            <Route exact path={'/'} render={() => <Users/>}/>\n                            <Route exact path={'/todos/:userId?'} render={() => <Todos/>}/>\n                        </Switch>\n                    </div>\n                </div>\n            </HashRouter>\n\n        );\n    }\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}